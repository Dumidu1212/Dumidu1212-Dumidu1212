name: Update GitHub Stats Cards

on:
  schedule:
    - cron: "0 0 * * *"   # once/day is enough
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRS_BASE: ${{ secrets.GRS_BASE }}  # e.g., https://your-app.vercel.app
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true

      - name: Prepare assets dir
        run: mkdir -p assets

      - name: Health check (self-hosted)
        run: |
          test -n "$GRS_BASE"
          echo "Ping $GRS_BASE"
          curl -I -sS "$GRS_BASE/api?username=Dumidu1212" | sed -n '1p;/^x-ratelimit-/Ip'

      - name: Fetch Top Languages (skip overwrite on error)
        run: |
          set -e
          URL="$GRS_BASE/api/top-langs/?username=Dumidu1212&layout=compact&theme=radical&hide_border=true&langs_count=10"
          tmp=$(mktemp)
          echo "GET $URL"
          if curl -sSL "$URL" -o "$tmp" && grep -q "<svg" "$tmp" && ! grep -qi "rate limit\|could not fetch" "$tmp"; then
            mv "$tmp" assets/top-langs.svg
          else
            echo "Fetch failed/rate-limited; keeping previous SVG."
            rm -f "$tmp"
          fi

      - name: Fetch Stats (no include_all_commits)
        run: |
          set -e
          URL="$GRS_BASE/api?username=Dumidu1212&show_icons=true&theme=radical&count_private=true&hide_border=true"
          tmp=$(mktemp)
          echo "GET $URL"
          if curl -sSL "$URL" -o "$tmp" && grep -q "<svg" "$tmp" && ! grep -qi "rate limit\|could not fetch" "$tmp"; then
            mv "$tmp" assets/gh-stats.svg
          else
            echo "Fetch failed/rate-limited; keeping previous SVG."
            rm -f "$tmp"
          fi

      - name: Commit changes (only if changed)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(stats): refresh GitHub cards"
          file_pattern: "assets/*.svg"
